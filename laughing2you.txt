local Aiming = loadstring(game:HttpGet("https://pastebin.com/raw/YmUFTisy", true))()
Aiming.TeamCheck(false)
 

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")


local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DaHoodSettings = {
    SilentAim = true,
    AimLock = false,
    Prediction = 0.14,
    AimLockKeybind = Enum.KeyCode.E,
    Resolver = false,
}
getgenv().DaHoodSettings = DaHoodSettings


function Aiming.Check()
-------------
    if not (Aiming.Enabled == true and Aiming.Selected ~= LocalPlayer and Aiming.SelectedPart ~= nil) then
        return false
    end

    -- // Check if downed
    local Character = Aiming.Character(Aiming.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil

    -- // Check B
    if (KOd or Grabbed) then
        return false
    end

    -- //
    return true
end

game:GetService("RunService").Heartbeat:Connect(function()
    if DaHoodSettings.Resolver then
    local oldvelocity = SelectedPart.Velocity
    end
end)


local oldIndex = nil 
oldIndex = hookmetamethod(game, "__index", function(self, Index)
    if self == Mouse and not checkcaller() then 
        local SelectedPart = Aiming.SelectedPart
        if DaHoodSettings.SilentAim and Index == "Hit" or Index == "Target" then
            
            if SelectedPart then
                local hit SelectedPart.CFrame + (Vector3.new(oldvelocity.X, -0, oldvelocity.Z) * DaHoodSettings.Prediction)
                local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)
                if Index == "Hit" then
                    return Hit
                elseif Index == "Target" then
                    return SelectedPart
                end
            end
        end
    end
    return oldIndex(self, Index)
end)

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

mouse.KeyDown:Connect(function(key)
    if key == "v" then
        if Aiming.Enabled == false then
        Aiming.Enabled = true
        else
        Aiming.Enabled = false
        end
    end
end)

-- // Aimlock
RunService:BindToRenderStep("AimLock", 0, function()
    if (DaHoodSettings.AimLock and Aiming.Check() and UserInputService:IsKeyDown(DaHoodSettings.AimLockKeybind)) then
        -- // Vars
        local SelectedPart = Aiming.SelectedPart

        -- // Hit to account prediction
        if DaHoodSettings.Resolver then
        local Hit = SelectedPart.CFrame + (Vector3.new(oldvelocity.X, -0, oldvelocity.Z) * DaHoodSettings.Prediction)
        else
        local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)
        end
        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
    end
    end)
