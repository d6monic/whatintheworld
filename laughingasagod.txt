local RizSilent = https://raw.githubusercontent.com/d6monic/whatintheworld/main/laughing2you.txt", true))()
RizSilent.TeamCheck(false)

local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = Workspace.CurrentCamera

local DaHoodSettings = {
    SilentAim = true,
    AimLock = false,
    Prediction = 0.131,
    AimLockKeybind = Enum.KeyCode.X
}

getgenv().DaHoodSettings = DaHoodSettings

function RizSilent.Check()
    if not (RizSilent.Enabled == true and RizSilent.Selected ~= LocalPlayer and RizSilent.SelectedPart ~= nil) then
        return false
    end
    local Character = RizSilent.Character(RizSilent.Selected)
    local KOd = Character:WaitForChild("BodyEffects")["K.O"].Value
    local Grabbed = Character:FindFirstChild("GRABBING_CONSTRAINT") ~= nil
    if (KOd or Grabbed) then
        return false
    end
    return true
end

local __index
__index =
    hookmetamethod(
    game,
    "__index",
    function(t, k)
        if (t:IsA("Mouse") and (k == "Hit" or k == "Target") and RizSilent.Check()) then
            local SelectedPart = RizSilent.SelectedPart
            if (DaHoodSettings.SilentAim and (k == "Hit" or k == "Target")) then
                local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)
                return (k == "Hit" and Hit or SelectedPart)
            end
        end
        return __index(t, k)
    end
)

RunService:BindToRenderStep(
    "AimLock",
    0,
    function()
        if (DaHoodSettings.AimLock and RizSilent.Check() and UserInputService:IsKeyDown(DaHoodSettings.AimLockKeybind)) then
            local SelectedPart = RizSilent.SelectedPart
            local Hit = SelectedPart.CFrame + (SelectedPart.Velocity * DaHoodSettings.Prediction)
            CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Hit.Position)
        end
    end
)
